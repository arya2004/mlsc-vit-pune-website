/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/final_domain_nav_platform2.glb -o src/app/team/MainPlatform.jsx 
*/

import React, { useRef } from "react";
import { FirstPersonControls, useGLTF } from "@react-three/drei";
import * as THREE from "three";
import { useFrame } from "@react-three/fiber";

export default function MainPlatform(props) {
  const { nodes, materials } = useGLTF(
    "/models/final_domain_nav_platform2.glb"
  );

  const controls = useRef();
  const platform = useRef();

  const cylin1 = useRef();
  const cylin2 = useRef();
  const cylin3 = useRef();
  const cylin4 = useRef();
  const cylin5 = useRef();
  const cylin6 = useRef();
  const cylin7 = useRef();

  // const raycaster = new THREE.Raycaster();
  // const intersectionObjects = [];
  // intersectionObjects.push(platform.current, cylin1.current, cylin2.current, cylin3.current, cylin4.current, cylin5.current, cylin6.current, cylin7.current);

  // const handleCollisions = () => {

  //   console.log('handle collisions')
  //   const camera = controls.current.getObject();

  //   raycaster.ray.origin.copy(camera.position);
  //   raycaster.ray.origin.y -= 10;

  //   const intersections = raycaster.intersectObjects(intersectionObjects);

  //   const onObject = intersections.length > 0;

  //   if (onObject) {
  //     const distance = intersectionObjects[0].distance - 5;
  //     camera.positon.addScaledVector(controls.current.direction, distance);
  //   }
  // };

  // useFrame(() => {
  //   controls.current.position.y = 0;
  // })

  return (
    <>
      {/* <FirstPersonControls ref={controls} onPointerMissed={console.log('onPointerMissed')} position={[0, 5, 15]} movementSpeed={20} lookSpeed={0.15} /> */}

      <group {...props} ref={platform} dispose={null}>
        <group rotation={[-Math.PI / 2, 0, 0]} scale={[2.573, 2.558, 4.578]}>
          <group position={[-4.948, -2.385, 9.885]} rotation={[0, 0, Math.PI]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Cube004_emission_0_1.geometry}
              material={materials.emission}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Cube004_emission_0_2.geometry}
              material={materials["Material.007"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Cube004_emission_0_3.geometry}
              material={materials.material_0}
            />
          </group>
        </group>
        <group
          position={[-1.464, 5.079, 109.374]}
          rotation={[-Math.PI / 2, 0, 1.568]}
          scale={[-5.799, -11.55, -1.401]}
        >
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube010_Material013_0.geometry}
            material={materials["Material.013"]}
            position={[7.197, 0.175, -2.211]}
            scale={[1, 0.5, 1]}
          />
        </group>
        <group
          position={[-0.759, 7.59, 0.45]}
          rotation={[-Math.PI / 2, 0, -0.788]}
          scale={[51.037, 51.037, 4.314]}
        >
          <mesh
            ref={cylin1}
            castShadow
            receiveShadow
            geometry={nodes.Cylinder_Material013_0.geometry}
            material={materials["Material.001"]}
            position={[0, 0, -0.448]}
          />
        </group>
        <group
          position={[-0.807, 20.068, 0.479]}
          rotation={[-Math.PI / 2, 0, -0.788]}
          scale={[9.174, 9.174, 4.731]}
        >
          <mesh
            ref={cylin2}
            castShadow
            receiveShadow
            geometry={nodes.Cylinder001_Material001_0.geometry}
            material={materials["Material.002"]}
            position={[0, 0, 0.086]}
          />
        </group>
        <group
          position={[-0.807, 27.069, 0.479]}
          rotation={[-Math.PI / 2, 0, -0.788]}
          scale={[8.655, 8.655, 1.109]}
        >
          <mesh
            ref={cylin3}
            castShadow
            receiveShadow
            geometry={nodes.Cylinder002_Material013_0.geometry}
            material={materials["Material.001"]}
            position={[0, 0, 0.397]}
          />
        </group>
        <group
          position={[-0.807, 20.068, 0.479]}
          rotation={[-Math.PI / 2, 0, -0.788]}
          scale={[9.174, 9.174, 4.731]}
        >
          <mesh
            ref={cylin4}
            castShadow
            receiveShadow
            geometry={nodes.Cylinder003__0.geometry}
            material={materials["Cylinder.003__0"]}
            position={[0, 0, 0.194]}
          />
        </group>
        <group
          position={[-0.807, 27.069, 0.479]}
          rotation={[-Math.PI / 2, 0, -0.788]}
          scale={[8.655, 8.655, 1.109]}
        >
          <mesh
            ref={cylin5}
            castShadow
            receiveShadow
            geometry={nodes.Cylinder004__0.geometry}
            material={materials["Cylinder.003__0"]}
            position={[0, 0, 0.478]}
          />
        </group>
        <mesh
          ref={cylin6}
          castShadow
          receiveShadow
          geometry={nodes.Cylinder007_Material013_0.geometry}
          material={materials["Material.013"]}
          position={[-1.569, 12.481, 48.354]}
          rotation={[-Math.PI / 2, 0, -0.788]}
          scale={[51.037, 51.037, 4.314]}
        />
        <mesh
          ref={cylin7}
          castShadow
          receiveShadow
          geometry={nodes.Cylinder008_Material013_0.geometry}
          material={materials["Material.013"]}
          position={[-1.569, 12.481, 48.354]}
          rotation={[-Math.PI / 2, 0, -0.788]}
          scale={[51.037, 51.037, 4.314]}
        />
      </group>
    </>
  );
}

useGLTF.preload("/models/final_domain_nav_platform2.glb");
